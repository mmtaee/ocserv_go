definitions:
  models.Site:
    properties:
      captcha_secret_key:
        type: string
      captcha_site_key:
        type: string
      default_traffic:
        type: number
      id:
        type: integer
    type: object
  site.CreateData:
    properties:
      captcha_secret_key:
        type: string
      captcha_site_key:
        type: string
      default_traffic:
        type: number
    required:
    - default_traffic
    type: object
  site.UpdateData:
    properties:
      captcha_secret_key:
        type: string
      captcha_site_key:
        type: string
      default_traffic:
        type: number
    type: object
  user.CreateData:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  user.CreateLoginData:
    properties:
      password:
        type: string
      remember_me:
        type: boolean
      username:
        type: string
    required:
    - password
    - username
    type: object
  user.CreateResponse:
    properties:
      admin:
        type: boolean
      id:
        type: integer
      username:
        type: string
    required:
    - username
    type: object
  user.CreateStaffData:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  user.LoginResponse:
    properties:
      expire_at:
        type: integer
      token:
        type: string
    type: object
  user.UpdateData:
    properties:
      current_password:
        type: string
      new_password:
        type: string
    required:
    - current_password
    - new_password
    type: object
info:
  contact: {}
paths:
  /api/v1/site/:
    get:
      description: Get site configuration
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Site'
        "400":
          description: Bad Request
      summary: Get site configuration
      tags:
      - site
    patch:
      description: Update site configuration
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request Body
        in: body
        name: site
        schema:
          $ref: '#/definitions/site.UpdateData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Site'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      summary: Update site configuration
      tags:
      - site
    post:
      description: Post site configuration
      parameters:
      - description: Request Body
        in: body
        name: site
        required: true
        schema:
          $ref: '#/definitions/site.CreateData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Site'
        "400":
          description: Bad Request
      summary: Post site configuration
      tags:
      - site
  /api/v1/user/:
    post:
      description: Set up an admin or superuser during site initialization
      parameters:
      - description: Request Body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.CreateData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.CreateResponse'
        "400":
          description: Bad Request
      summary: Set up an admin user
      tags:
      - user
  /api/v1/user/login/:
    post:
      description: Login admin or staff user to get token
      parameters:
      - description: Request Body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.CreateLoginData'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.LoginResponse'
        "400":
          description: Bad Request
      summary: Login
      tags:
      - user
  /api/v1/user/password/:
    post:
      description: Update admin or staff user password (self change)
      parameters:
      - description: Request Body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.UpdateData'
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
      summary: Update Password
      tags:
      - user
  /api/v1/user/staffs/:
    post:
      description: Create staff user
      parameters:
      - description: Request Body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.CreateStaffData'
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.CreateResponse'
        "400":
          description: Bad Request
        "403":
          description: Admin Permission required
      summary: Create staff user
      tags:
      - user
  /api/v1/user/staffs/:id/:
    delete:
      description: Delete staff user(by admin)
      parameters:
      - description: Request Body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.UpdateData'
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "403":
          description: Admin Permission required
        "404":
          description: Not Found
      summary: Delete staff
      tags:
      - user
  /api/v1/user/staffs/:id/password/:
    post:
      description: Update staff user password(by admin)
      parameters:
      - description: Request Body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.UpdateData'
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
        "403":
          description: Admin Permission required
      summary: Update staff password
      tags:
      - user
swagger: "2.0"
