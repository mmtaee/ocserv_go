{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v1/ocserv/": {
            "post": {
                "description": "Create Ocserv User",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ocserv user"
                ],
                "summary": "Create Ocserv User",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "site",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ocserv_user.CreateOcservUserBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.OcservUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/v1/ocserv/:id/": {
            "delete": {
                "description": "Delete ocserv user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ocserv user"
                ],
                "summary": "Delete ocserv user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "description": "Update Ocserv User",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ocserv user"
                ],
                "summary": "Update Ocserv User",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "site",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ocserv_user.UpdateOcservUserBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.OcservUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/v1/ocserv/:id/disconnect/": {
            "post": {
                "description": "Disconnect ocserv user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ocserv user"
                ],
                "summary": "Disconnect ocserv user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/v1/site/": {
            "get": {
                "description": "Get site configuration",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "site"
                ],
                "summary": "Get site configuration",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Site"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "description": "Post site configuration",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "site"
                ],
                "summary": "Post site configuration",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "site",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/site.CreateSiteBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Site"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "patch": {
                "description": "Update site configuration",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "site"
                ],
                "summary": "Update site configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request Body",
                        "name": "site",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/site.UpdateSiteBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Site"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/v1/users/": {
            "post": {
                "description": "Set up an admin or superuser during site initialization",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Set up an admin user",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.CreateUserBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.CreateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/v1/users/login/": {
            "post": {
                "description": "Login admin or staff user to get token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.CreateLoginBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/user.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/v1/users/password/": {
            "patch": {
                "description": "Update admin or staff user password (self change)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update Password",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserPasswordBody"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/v1/users/staffs/": {
            "post": {
                "description": "Create staff user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create staff user",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.CreateUserBody"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/user.CreateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Admin Permission required"
                    }
                }
            }
        },
        "/api/v1/users/staffs/:id/": {
            "delete": {
                "description": "Delete staff user(by admin)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete staff",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Admin Permission required"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/v1/users/staffs/:id/password/": {
            "patch": {
                "description": "Update staff user password(by admin)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update staff password",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateStaffPasswordBody"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Admin Permission required"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.OcservUser": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "default_traffic": {
                    "type": "number"
                },
                "expire_at": {
                    "type": "integer"
                },
                "group": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_online": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "rx": {
                    "type": "number"
                },
                "traffic_type": {
                    "$ref": "#/definitions/models.ServiceTypeEnum"
                },
                "tx": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.ServiceTypeEnum": {
            "type": "string",
            "enum": [
                "FREE",
                "MONTHLY",
                "TOTALLY"
            ],
            "x-enum-comments": {
                "FREE": "The user uses the service without restrictions",
                "MONTHLY": "The user uses the service with a monthly usage limit",
                "TOTALLY": "The user uses the service with a limited Rx-TX"
            },
            "x-enum-varnames": [
                "FREE",
                "MONTHLY",
                "TOTALLY"
            ]
        },
        "models.Site": {
            "type": "object",
            "properties": {
                "captcha_secret_key": {
                    "type": "string"
                },
                "captcha_site_key": {
                    "type": "string"
                },
                "default_traffic": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "ocserv_user.CreateOcservUserBody": {
            "type": "object",
            "required": [
                "default_traffic",
                "group",
                "traffic_type",
                "username"
            ],
            "properties": {
                "default_traffic": {
                    "type": "number"
                },
                "expire_at": {
                    "type": "integer"
                },
                "group": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean",
                    "enum": [
                        true,
                        false
                    ]
                },
                "password": {
                    "type": "string",
                    "maxLength": 12,
                    "minLength": 4
                },
                "traffic_type": {
                    "enum": [
                        "FREE",
                        "MONTHLY",
                        "TOTALLY"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.ServiceTypeEnum"
                        }
                    ]
                },
                "username": {
                    "type": "string",
                    "maxLength": 8,
                    "minLength": 4
                }
            }
        },
        "ocserv_user.UpdateOcservUserBody": {
            "type": "object",
            "properties": {
                "default_traffic": {
                    "type": "number"
                },
                "expire_at": {
                    "type": "integer"
                },
                "group": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean",
                    "enum": [
                        true,
                        false
                    ]
                },
                "password": {
                    "type": "string",
                    "maxLength": 12,
                    "minLength": 4
                },
                "traffic_type": {
                    "enum": [
                        "FREE",
                        "MONTHLY",
                        "TOTALLY"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.ServiceTypeEnum"
                        }
                    ]
                }
            }
        },
        "site.CreateSiteBody": {
            "type": "object",
            "required": [
                "default_traffic"
            ],
            "properties": {
                "captcha_secret_key": {
                    "type": "string"
                },
                "captcha_site_key": {
                    "type": "string"
                },
                "default_traffic": {
                    "type": "number"
                }
            }
        },
        "site.UpdateSiteBody": {
            "type": "object",
            "properties": {
                "captcha_secret_key": {
                    "type": "string"
                },
                "captcha_site_key": {
                    "type": "string"
                },
                "default_traffic": {
                    "type": "number"
                }
            }
        },
        "user.CreateLoginBody": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "remember_me": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user.CreateUserBody": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user.CreateUserResponse": {
            "type": "object",
            "required": [
                "username"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "is_admin": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user.LoginResponse": {
            "type": "object",
            "properties": {
                "expire_at": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "user.UpdateStaffPasswordBody": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "user.UpdateUserPasswordBody": {
            "type": "object",
            "required": [
                "current_password",
                "new_password"
            ],
            "properties": {
                "current_password": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                }
            }
        }
    }
}